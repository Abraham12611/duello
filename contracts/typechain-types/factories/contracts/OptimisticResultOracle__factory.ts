/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OptimisticResultOracle,
  OptimisticResultOracleInterface,
} from "../../contracts/OptimisticResultOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
    ],
    name: "Disputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum OptimisticResultOracle.Result",
        name: "result",
        type: "uint8",
      },
    ],
    name: "Finalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum OptimisticResultOracle.Result",
        name: "result",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Proposed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
    ],
    name: "dispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
    ],
    name: "getResult",
    outputs: [
      {
        internalType: "enum OptimisticResultOracle.Result",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "enum OptimisticResultOracle.Result",
        name: "result",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "disputed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "finalized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
      {
        internalType: "enum OptimisticResultOracle.Result",
        name: "result",
        type: "uint8",
      },
    ],
    name: "propose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "w",
        type: "uint256",
      },
    ],
    name: "setDisputeWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526201518060015534801561001757600080fd5b5061003461002961003960201b60201c565b61004160201b60201c565b610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ffb806101146000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461013657806392584d8014610154578063add4c78414610170578063add98c70146101a1578063f2fde38b146101bd5761009e565b8063117f5f92146100a357806332ed5b12146100c1578063332226d0146100f45780633883c59014610110578063715018a61461012c575b600080fd5b6100ab6101d9565b6040516100b89190610891565b60405180910390f35b6100db60048036038101906100d691906108e7565b6101df565b6040516100eb94939291906109a6565b60405180910390f35b61010e60048036038101906101099190610a17565b610236565b005b61012a60048036038101906101259190610a69565b610248565b005b610134610367565b005b61013e61037b565b60405161014b9190610aea565b60405180910390f35b61016e600480360381019061016991906108e7565b6103a4565b005b61018a600480360381019061018591906108e7565b610564565b604051610198929190610b05565b60405180910390f35b6101bb60048036038101906101b691906108e7565b6105ac565b005b6101d760048036038101906101d29190610b5a565b6106ab565b005b60015481565b60026020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16905084565b61023e61072e565b8060018190555050565b61025061072e565b60006002600084815260200190815260200160002090508060020160019054906101000a900460ff16156102b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b090610be4565b60405180910390fd5b818160000160006101000a81548160ff021916908360038111156102e0576102df610914565b5b021790555042816001018190555060008160020160006101000a81548160ff02191690831515021790555060008160020160016101000a81548160ff021916908315150217905550827f462bd44853acf4d4223a65e55ec9c60f40075dd3455cabcbc06293e7a04356d4834260405161035a929190610c04565b60405180910390a2505050565b61036f61072e565b61037960006107ac565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006002600083815260200190815260200160002090506000816001015403610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f990610c79565b60405180910390fd5b8060020160019054906101000a900460ff1615610454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044b90610ce5565b60405180910390fd5b60015481600101546104669190610d34565b4210156104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f90610db4565b60405180910390fd5b8060020160009054906101000a900460ff16156104fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f190610e20565b60405180910390fd5b60018160020160016101000a81548160ff021916908315150217905550817f229a74f8f240839ae623fe7162e0d104069125357819563bcc91b95fe57c9e5a8260000160009054906101000a900460ff166040516105589190610e40565b60405180910390a25050565b60008060006002600085815260200190815260200160002090508060000160009054906101000a900460ff168160020160019054906101000a900460ff169250925050915091565b6000600260008381526020019081526020016000209050600081600101540361060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190610c79565b60405180910390fd5b600154816001015461061c9190610d34565b421061065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490610ea7565b60405180910390fd5b60018160020160006101000a81548160ff021916908315150217905550817fca70e7aeb33495b6c3c0b357a3ccce5d3df980adbdf4dc680d7937f3f0ef4efd60405160405180910390a25050565b6106b361072e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610722576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071990610f39565b60405180910390fd5b61072b816107ac565b50565b610736610870565b73ffffffffffffffffffffffffffffffffffffffff1661075461037b565b73ffffffffffffffffffffffffffffffffffffffff16146107aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a190610fa5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61088b81610878565b82525050565b60006020820190506108a66000830184610882565b92915050565b600080fd5b6000819050919050565b6108c4816108b1565b81146108cf57600080fd5b50565b6000813590506108e1816108bb565b92915050565b6000602082840312156108fd576108fc6108ac565b5b600061090b848285016108d2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061095457610953610914565b5b50565b600081905061096582610943565b919050565b600061097582610957565b9050919050565b6109858161096a565b82525050565b60008115159050919050565b6109a08161098b565b82525050565b60006080820190506109bb600083018761097c565b6109c86020830186610882565b6109d56040830185610997565b6109e26060830184610997565b95945050505050565b6109f481610878565b81146109ff57600080fd5b50565b600081359050610a11816109eb565b92915050565b600060208284031215610a2d57610a2c6108ac565b5b6000610a3b84828501610a02565b91505092915050565b60048110610a5157600080fd5b50565b600081359050610a6381610a44565b92915050565b60008060408385031215610a8057610a7f6108ac565b5b6000610a8e858286016108d2565b9250506020610a9f85828601610a54565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ad482610aa9565b9050919050565b610ae481610ac9565b82525050565b6000602082019050610aff6000830184610adb565b92915050565b6000604082019050610b1a600083018561097c565b610b276020830184610997565b9392505050565b610b3781610ac9565b8114610b4257600080fd5b50565b600081359050610b5481610b2e565b92915050565b600060208284031215610b7057610b6f6108ac565b5b6000610b7e84828501610b45565b91505092915050565b600082825260208201905092915050565b7f46696e616c697a65640000000000000000000000000000000000000000000000600082015250565b6000610bce600983610b87565b9150610bd982610b98565b602082019050919050565b60006020820190508181036000830152610bfd81610bc1565b9050919050565b6000604082019050610c19600083018561097c565b610c266020830184610882565b9392505050565b7f4e6f2070726f706f73616c000000000000000000000000000000000000000000600082015250565b6000610c63600b83610b87565b9150610c6e82610c2d565b602082019050919050565b60006020820190508181036000830152610c9281610c56565b9050919050565b7f416c726561647900000000000000000000000000000000000000000000000000600082015250565b6000610ccf600783610b87565b9150610cda82610c99565b602082019050919050565b60006020820190508181036000830152610cfe81610cc2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3f82610878565b9150610d4a83610878565b9250828201905080821115610d6257610d61610d05565b5b92915050565b7f546f6f20736f6f6e000000000000000000000000000000000000000000000000600082015250565b6000610d9e600883610b87565b9150610da982610d68565b602082019050919050565b60006020820190508181036000830152610dcd81610d91565b9050919050565b7f4469737075746564000000000000000000000000000000000000000000000000600082015250565b6000610e0a600883610b87565b9150610e1582610dd4565b602082019050919050565b60006020820190508181036000830152610e3981610dfd565b9050919050565b6000602082019050610e55600083018461097c565b92915050565b7f57696e646f772070617373656400000000000000000000000000000000000000600082015250565b6000610e91600d83610b87565b9150610e9c82610e5b565b602082019050919050565b60006020820190508181036000830152610ec081610e84565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f23602683610b87565b9150610f2e82610ec7565b604082019050919050565b60006020820190508181036000830152610f5281610f16565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f8f602083610b87565b9150610f9a82610f59565b602082019050919050565b60006020820190508181036000830152610fbe81610f82565b905091905056fea2646970667358221220bd09893cabfecf3a59c921f1751947609e8a1572d5c4953e17ec0a83bdb46c1664736f6c63430008130033";

type OptimisticResultOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimisticResultOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimisticResultOracle__factory extends ContractFactory {
  constructor(...args: OptimisticResultOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OptimisticResultOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OptimisticResultOracle__factory {
    return super.connect(runner) as OptimisticResultOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimisticResultOracleInterface {
    return new Interface(_abi) as OptimisticResultOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OptimisticResultOracle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OptimisticResultOracle;
  }
}
